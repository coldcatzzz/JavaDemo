多态
1.一个对象的编译类型和运行类型可以不一致

//编译类型是Animal  运行类型是Dog
//父类引用指向子类对象
Animal animal = new Dog()

2.编译类型在定义对象时，就确定了，不能改变

3.运行类型是可以改变的

//运行类型变成Cat，编辑类型还是Animal
animal = new Cat()

------------------------------------------------------

4.多态的前提，两个类是继承关系

5.多态的‘向上转型’
    a.父类的引用指向子类的对象
    b.语法 Animal animal = new Dog()
    c.特点：
            编译类型左边，运行类型右边
            可以继承父类的所有成员（需要遵循访问权限）
            不能调用子类的特有方法
            （因为在编译阶段，能调用哪些成员，是由编译类型来决定的）
            最终运行效果看子类的具体实现

6.多态的‘向下转型’
    a. Cat cat = (Cat)animal    //编译类型是Cat
    b. 只能强转父类的引用，不能强转父类的对象   //animal (Ok)   Animal (Error)
    c. 要求父类的引用必须指向的是当前目标类型的对象  animal -> cat
    d. 可以调用子类中的所有成员



